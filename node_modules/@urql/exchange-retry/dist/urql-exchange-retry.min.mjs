import{makeOperation as r}from"@urql/core";import{share as t,makeSubject as n,mergeMap as e,filter as o,takeUntil as a,delay as u,fromValue as i,merge as c}from"wonka";function y(){return(y=Object.assign||function(r){for(var t=1;t<arguments.length;t++){var n,e=arguments[t];for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n])}return r}).apply(this,arguments)}function f(r){return r&&r.networkError}export function retryExchange(p){var l=p.initialDelayMs||1e3,m=p.maxDelayMs||15e3,s=p.maxNumberAttempts||2,x=p.randomDelay||!0,d=p.retryIf||f;return function(f){var p=f.forward;return function(f){var k=t(f),v=(f=n()).source,h=f.next;return f=e((function(t){var n=t.key,e=t.context,c=(e.retryCount||0)+1;e=e.retryDelay||l;var f=Math.random()+1.5;return x&&e*f<m&&(e*=f),f=o((function(r){return("query"===r.kind||"teardown"===r.kind)&&r.key===n}))(k),a(f)(u(e)(i(r(t.kind,t,y({},t.context,{retryDelay:e,retryCount:c})))))}))(v),o((function(r){return!r.error||!d(r.error,r.operation)||(r.operation.context.retryCount||0)>=s-1||(h(r.operation),!1)}))(t(p(c([k,f]))))}}}
//# sourceMappingURL=urql-exchange-retry.min.mjs.map
