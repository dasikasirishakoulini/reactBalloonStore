{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useQuery } from 'urql';\nimport { get } from 'lodash';\nimport { GET_BALLOONS } from '@graphql/queries';\nimport usePagination from '@pages/Dashboard/components/BalloonsList/usePagination';\nimport { useEffect } from 'react';\n\nconst useBalloons = filters => {\n  _s();\n\n  const {\n    onResponse,\n    nextPage,\n    reset,\n    paginationVars\n  } = usePagination();\n  const [{\n    data,\n    fetching,\n    error\n  }] = useQuery({\n    query: GET_BALLOONS,\n    variables: { ...paginationVars,\n      filter: { ...(filters.variant ? {\n          variant: filters.variant\n        } : {}),\n        ...(filters.color ? {\n          color: filters.color\n        } : {})\n      },\n      ...(filters.sort ? {\n        sort: filters.sort\n      } : {})\n    }\n  });\n  useEffect(() => {\n    reset();\n  }, [filters]);\n  useEffect(() => {\n    var _data$balloons;\n\n    (data === null || data === void 0 ? void 0 : data.balloons) && onResponse(data === null || data === void 0 ? void 0 : (_data$balloons = data.balloons) === null || _data$balloons === void 0 ? void 0 : _data$balloons.pageInfo);\n  }, [data === null || data === void 0 ? void 0 : data.balloons]);\n  const balloonsEdges = get(data, 'balloons.edges', []);\n  const hasNextPage = get(data, 'balloons.pageInfo.hasNextPage', false);\n  const balloons = balloonsEdges.map(balloonEdge => balloonEdge.node);\n  return {\n    balloons,\n    fetching,\n    error,\n    hasNextPage,\n    nextPage\n  };\n};\n\n_s(useBalloons, \"nO3whsNWMjTAD0sHRb28g6yGELs=\", false, function () {\n  return [usePagination, useQuery];\n});\n\nexport default useBalloons;","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/pages/Dashboard/components/BalloonsList/useBalloons.ts"],"names":["useQuery","get","GET_BALLOONS","usePagination","useEffect","useBalloons","filters","onResponse","nextPage","reset","paginationVars","data","fetching","error","query","variables","filter","variant","color","sort","balloons","pageInfo","balloonsEdges","hasNextPage","map","balloonEdge","node"],"mappings":";;AAAA;AACA,SAASA,QAAT,QAAwC,MAAxC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAUA,MAAMC,WAAW,GAAIC,OAAD,IAAoC;AAAA;;AACtD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA;AAA/B,MAAkDP,aAAa,EAArE;AACA,QAAM,CAAC;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAD,IAA8Bb,QAAQ,CAAC;AAC3Cc,IAAAA,KAAK,EAAEZ,YADoC;AAE3Ca,IAAAA,SAAS,EAAE,EACT,GAAGL,cADM;AAETM,MAAAA,MAAM,EAAE,EACN,IAAIV,OAAO,CAACW,OAAR,GAAkB;AAAEA,UAAAA,OAAO,EAAEX,OAAO,CAACW;AAAnB,SAAlB,GAAiD,EAArD,CADM;AAEN,YAAIX,OAAO,CAACY,KAAR,GAAgB;AAAEA,UAAAA,KAAK,EAAEZ,OAAO,CAACY;AAAjB,SAAhB,GAA2C,EAA/C;AAFM,OAFC;AAMT,UAAIZ,OAAO,CAACa,IAAR,GAAe;AAAEA,QAAAA,IAAI,EAAEb,OAAO,CAACa;AAAhB,OAAf,GAAwC,EAA5C;AANS;AAFgC,GAAD,CAA5C;AAYAf,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK;AACN,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;AAIAF,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,KAAAO,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,QAAN,KAAkBb,UAAU,CAACI,IAAD,aAACA,IAAD,yCAACA,IAAI,CAAES,QAAP,mDAAC,eAAgBC,QAAjB,CAA5B;AACD,GAFQ,EAEN,CAACV,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAES,QAAP,CAFM,CAAT;AAIA,QAAME,aAAa,GAAGrB,GAAG,CAACU,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAAzB;AACA,QAAMY,WAAW,GAAGtB,GAAG,CAACU,IAAD,EAAO,+BAAP,EAAwC,KAAxC,CAAvB;AAEA,QAAMS,QAAQ,GAAGE,aAAa,CAACE,GAAd,CAAmBC,WAAD,IAA8BA,WAAW,CAACC,IAA5D,CAAjB;AAEA,SAAO;AACLN,IAAAA,QADK;AAELR,IAAAA,QAFK;AAGLC,IAAAA,KAHK;AAILU,IAAAA,WAJK;AAKLf,IAAAA;AALK,GAAP;AAOD,CAlCD;;GAAMH,W;UACoDF,a,EACpBH,Q;;;AAkCtC,eAAeK,WAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useQuery, CombinedError } from 'urql';\nimport { get } from 'lodash';\nimport { GET_BALLOONS } from '@graphql/queries';\nimport usePagination from '@pages/Dashboard/components/BalloonsList/usePagination';\nimport { useEffect } from 'react';\n\ninterface BalloonsHook {\n  balloons: Balloon[];\n  fetching: boolean;\n  error?: CombinedError;\n  hasNextPage: boolean;\n  nextPage: () => void;\n}\n\nconst useBalloons = (filters: Filters): BalloonsHook => {\n  const { onResponse, nextPage, reset, paginationVars } = usePagination();\n  const [{ data, fetching, error }] = useQuery({\n    query: GET_BALLOONS,\n    variables: {\n      ...paginationVars,\n      filter: {\n        ...(filters.variant ? { variant: filters.variant } : {}),\n        ...(filters.color ? { color: filters.color } : {}),\n      },\n      ...(filters.sort ? { sort: filters.sort } : {}),\n    },\n  });\n\n  useEffect(() => {\n    reset();\n  }, [filters]);\n\n  useEffect(() => {\n    data?.balloons && onResponse(data?.balloons?.pageInfo);\n  }, [data?.balloons]);\n\n  const balloonsEdges = get(data, 'balloons.edges', []);\n  const hasNextPage = get(data, 'balloons.pageInfo.hasNextPage', false);\n\n  const balloons = balloonsEdges.map((balloonEdge: BalloonEdge) => balloonEdge.node);\n\n  return {\n    balloons,\n    fetching,\n    error,\n    hasNextPage,\n    nextPage,\n  };\n};\n\nexport default useBalloons;\n"]},"metadata":{},"sourceType":"module"}