{"ast":null,"code":"import _objectSpread from\"/Users/sirishadasika/Desktop/balloon/Balloons-Store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/sirishadasika/Desktop/balloon/Balloons-Store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Users/sirishadasika/Desktop/balloon/Balloons-Store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import{border,fontSize,color,height,background,width}from'styled-system';import styled from'styled-components';import{themeGet}from'@styled-system/theme-get';import{jsx as _jsx}from\"react/jsx-runtime\";var Container=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  \",\";\\n  \",\";\\n  \",\";\\n  \",\";\\n  \",\";\\n  font-weight: bold;\\n  \",\";\\n\\n  &:hover {\\n    background-color: \",\";\\n    color: \",\";\\n    border: solid 1px \",\";\\n  }\\n\"])),function(props){return props.wide&&'100%';},height,width,background,color,border,fontSize,function(props){return themeGet(\"colors.\".concat(props.hoverBackgroundColor));},function(props){return themeGet(\"colors.\".concat(props.hoverColor));},function(props){return themeGet(\"colors.\".concat(props.hoverColor));});var Button=function Button(_ref){var content=_ref.content,props=_objectWithoutProperties(_ref,[\"content\"]);return/*#__PURE__*/_jsx(Container,_objectSpread(_objectSpread({type:\"button\"},props),{},{children:content}));};Button.defaultProps={color:'white',wide:false,hoverBackgroundColor:'white',hoverColor:'black',background:'black',height:'50px',fontSize:'1rem',border:'none'};export default Button;","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/components/atoms/Button/Button.tsx"],"names":["React","border","fontSize","color","height","background","width","styled","themeGet","Container","button","props","wide","hoverBackgroundColor","hoverColor","Button","content","defaultProps"],"mappings":"qjBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,MADF,CAEEC,QAFF,CAKEC,KALF,CAOEC,MAPF,CAUEC,UAVF,CAWEC,KAXF,KAaO,eAbP,CAcA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,QAAT,KAAyB,0BAAzB,C,2CAkBA,GAAMC,CAAAA,SAAS,CAAGF,MAAM,CAACG,MAAV,qPACJ,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,EAAc,MAAlB,EADD,CAEXR,MAFW,CAGXE,KAHW,CAIXD,UAJW,CAKXF,KALW,CAMXF,MANW,CAQXC,QARW,CAWS,SAAAS,KAAK,QAAIH,CAAAA,QAAQ,kBAAWG,KAAK,CAACE,oBAAjB,EAAZ,EAXd,CAYF,SAAAF,KAAK,QAAIH,CAAAA,QAAQ,kBAAWG,KAAK,CAACG,UAAjB,EAAZ,EAZH,CAaS,SAAAH,KAAK,QAAIH,CAAAA,QAAQ,kBAAWG,KAAK,CAACG,UAAjB,EAAZ,EAbd,CAAf,CAiBA,GAAMC,CAAAA,MAAuB,CAAG,QAA1BA,CAAAA,MAA0B,MAA2B,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CAAZL,KAAY,4CACzD,mBACE,KAAC,SAAD,8BAAW,IAAI,CAAC,QAAhB,EAA6BA,KAA7B,eACGK,OADH,GADF,CAKD,CAND,CAQAD,MAAM,CAACE,YAAP,CAAsB,CACpBd,KAAK,CAAE,OADa,CAEpBS,IAAI,CAAE,KAFc,CAGpBC,oBAAoB,CAAE,OAHF,CAIpBC,UAAU,CAAE,OAJQ,CAKpBT,UAAU,CAAE,OALQ,CAMpBD,MAAM,CAAE,MANY,CAOpBF,QAAQ,CAAE,MAPU,CAQpBD,MAAM,CAAE,MARY,CAAtB,CAWA,cAAec,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport {\n  border,\n  fontSize,\n  BorderProps,\n  FontSizeProps,\n  color,\n  ColorProps,\n  height,\n  HeightProps,\n  BackgroundProps,\n  background,\n  width,\n  WidthProps,\n} from 'styled-system';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\ninterface ContainerProps extends React.HTMLAttributes<HTMLButtonElement> {\n  wide?: boolean;\n  hoverColor?: string;\n  hoverBackgroundColor?: string;\n}\n\ntype Props = ContainerProps &\n  HeightProps &\n  ColorProps &\n  BackgroundProps &\n  FontSizeProps &\n  WidthProps &\n  BorderProps & {\n    content: string;\n  };\n\nconst Container = styled.button<ContainerProps>`\n  width: ${props => props.wide && '100%'};\n  ${height};\n  ${width};\n  ${background};\n  ${color};\n  ${border};\n  font-weight: bold;\n  ${fontSize};\n\n  &:hover {\n    background-color: ${props => themeGet(`colors.${props.hoverBackgroundColor}`)};\n    color: ${props => themeGet(`colors.${props.hoverColor}`)};\n    border: solid 1px ${props => themeGet(`colors.${props.hoverColor}`)};\n  }\n`;\n\nconst Button: React.FC<Props> = ({ content, ...props }) => {\n  return (\n    <Container type='button' {...props}>\n      {content}\n    </Container>\n  );\n};\n\nButton.defaultProps = {\n  color: 'white',\n  wide: false,\n  hoverBackgroundColor: 'white',\n  hoverColor: 'black',\n  background: 'black',\n  height: '50px',\n  fontSize: '1rem',\n  border: 'none',\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}