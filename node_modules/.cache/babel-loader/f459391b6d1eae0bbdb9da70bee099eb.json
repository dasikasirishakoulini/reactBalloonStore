{"ast":null,"code":"var _jsxFileName = \"/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/ErrorBoundary.tsx\";\nimport React, { Component } from 'react';\nimport Error from '@pages/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(_) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/ErrorBoundary.tsx"],"names":["React","Component","Error","ErrorBoundary","state","hasError","getDerivedStateFromError","_","componentDidCatch","error","errorInfo","console","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAUA,MAAMC,aAAN,SAA4BF,SAA5B,CAAoD;AAAA;AAAA;AAAA,SAC3CG,KAD2C,GAC5B;AACpBC,MAAAA,QAAQ,EAAE;AADU,KAD4B;AAAA;;AAKZ,SAAxBC,wBAAwB,CAACC,CAAD,EAAkB;AACtD;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEMG,EAAAA,iBAAiB,CAACC,KAAD,EAAeC,SAAf,EAAqC;AAC3DC,IAAAA,OAAO,CAACF,KAAR,CAAc,iBAAd,EAAiCA,KAAjC,EAAwCC,SAAxC;AACD;;AAEME,EAAAA,MAAM,GAAG;AACd,QAAI,KAAKR,KAAL,CAAWC,QAAf,EAAyB;AACvB,0BAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACD;;AApBiD;;AAuBpD,eAAeX,aAAf","sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport Error from '@pages/Error';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <Error />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}