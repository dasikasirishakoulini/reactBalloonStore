{"ast":null,"code":"var _jsxFileName = \"/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/pages/Dashboard/components/FiltersContext/FiltersContext.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { createContext, useCallback, useState } from 'react';\nimport initials from './initials';\nimport { isEqual } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext({\n  setFilter: _ => _ => null,\n  filters: initials,\n  changed: false\n});\n\nconst Provider = ({\n  children\n}) => {\n  _s();\n\n  const [filters, setFilters] = useState(initials);\n  const setFilter = useCallback(key => value => {\n    setFilters({ ...filters,\n      [key]: value\n    });\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      filters,\n      setFilter,\n      changed: !isEqual(filters, initials)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Provider, \"P47c0NWbR3E5PZ2ZGX2ay1u0tMg=\");\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/pages/Dashboard/components/FiltersContext/FiltersContext.tsx"],"names":["React","createContext","useCallback","useState","initials","isEqual","Context","setFilter","_","filters","changed","Provider","children","setFilters","key","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA0CC,WAA1C,EAAuDC,QAAvD,QAAuE,OAAvE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAYA,OAAO,MAAMC,OAAO,gBAAGL,aAAa,CAAsB;AACxDM,EAAAA,SAAS,EAAGC,CAAD,IAAeA,CAAC,IAAI,IADyB;AAExDC,EAAAA,OAAO,EAAEL,QAF+C;AAGxDM,EAAAA,OAAO,EAAE;AAH+C,CAAtB,CAA7B;;AAMP,MAAMC,QAAwC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjE,QAAM,CAACH,OAAD,EAAUI,UAAV,IAAwBV,QAAQ,CAAUC,QAAV,CAAtC;AAEA,QAAMG,SAAS,GAAGL,WAAW,CAC1BY,GAAD,IAAkBC,KAAD,IAAmB;AAClCF,IAAAA,UAAU,CAAC,EAAE,GAAGJ,OAAL;AAAc,OAACK,GAAD,GAAOC;AAArB,KAAD,CAAV;AACD,GAH0B,EAI3B,CAACN,OAAD,CAJ2B,CAA7B;AAOA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAF;AAAWF,MAAAA,SAAX;AAAsBG,MAAAA,OAAO,EAAE,CAACL,OAAO,CAACI,OAAD,EAAUL,QAAV;AAAvC,KAAzB;AAAA,cACGQ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;GAAMD,Q;;KAAAA,Q;AAiBN,eAAeA,QAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { createContext, ReactNode, useCallback, useState } from 'react';\nimport initials from './initials';\nimport { isEqual } from 'lodash';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface FiltersContextProps {\n  setFilter: (key: string) => (val: any) => void;\n  filters: Filters;\n  changed: boolean;\n}\n\nexport const Context = createContext<FiltersContextProps>({\n  setFilter: (_: string) => _ => null,\n  filters: initials,\n  changed: false,\n});\n\nconst Provider: React.FunctionComponent<Props> = ({ children }) => {\n  const [filters, setFilters] = useState<Filters>(initials);\n\n  const setFilter = useCallback(\n    (key: string) => (value: string) => {\n      setFilters({ ...filters, [key]: value });\n    },\n    [filters],\n  );\n\n  return (\n    <Context.Provider value={{ filters, setFilter, changed: !isEqual(filters, initials) }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}