{"ast":null,"code":"var _jsxFileName = \"/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/shared/cart/CartContext.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useLocalStorage from '@shared/hooks/useLocalStorage';\nimport { updateQuantity } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/React.createContext({\n  add: () => null,\n  remove: () => null,\n  balloons: [],\n  isInCart: () => false,\n  toggle: () => null,\n  addQuantity: () => null,\n  subtractQuantity: () => null\n});\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cart = [], setCart] = useLocalStorage('cart', []);\n  const [balloons, setBalloons] = useState([]);\n  const add = useCallback(balloon => {\n    !isInCart(balloon.id) ? setBalloons(v => [{\n      balloon,\n      count: 1\n    }, ...v]) : addQuantity(balloon.id);\n  }, [balloons]);\n  const isInCart = useCallback(id => {\n    return !!balloons.find(balloonWithQuantity => balloonWithQuantity.balloon.id === id);\n  }, [balloons]);\n  const toggle = useCallback(balloon => {\n    isInCart(balloon.id) ? remove(balloon.id) : add(balloon);\n  }, [balloons]);\n  const remove = useCallback(id => {\n    setBalloons(v => v.filter(balloonWithQuantity => balloonWithQuantity.balloon.id !== id));\n  }, [balloons]);\n  const addQuantity = useCallback(id => {\n    setBalloons(updateQuantity(balloons, id, 1));\n  }, [balloons]);\n  const subtractQuantity = useCallback(id => {\n    setBalloons(updateQuantity(balloons, id, -1).filter(balloonWithQuantity => balloonWithQuantity.count > 0));\n  }, [balloons]); // Load initial local storage values\n\n  useEffect(() => {\n    setBalloons(cart);\n  }, []); // Update local storage on every balloons change\n\n  useEffect(() => {\n    setCart(balloons);\n  }, [balloons]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      add,\n      remove,\n      balloons,\n      isInCart,\n      toggle,\n      subtractQuantity,\n      addQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"1NQkDzBaw1m49/ACy71pyZTa5NQ=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/shared/cart/CartContext.tsx"],"names":["React","useCallback","useEffect","useState","useLocalStorage","updateQuantity","CartContext","createContext","add","remove","balloons","isInCart","toggle","addQuantity","subtractQuantity","CartProvider","children","cart","setCart","setBalloons","balloon","id","v","count","find","balloonWithQuantity","filter"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useLocalStorage from '@shared/hooks/useLocalStorage';\nimport { updateQuantity } from './utils';\n\ntype ContextProps = {\n  add: (_: Balloon) => void;\n  toggle: (_: Balloon) => void;\n  remove: (_: string) => void;\n  balloons: BalloonWithQuantity[];\n  isInCart: (_: string) => boolean;\n  addQuantity: (_: string) => void;\n  subtractQuantity: (_: string) => void;\n};\n\nexport const CartContext = React.createContext<ContextProps>({\n  add: () => null,\n  remove: () => null,\n  balloons: [],\n  isInCart: () => false,\n  toggle: () => null,\n  addQuantity: () => null,\n  subtractQuantity: () => null,\n});\n\ninterface DropDownMenuInterface {\n  children: React.ReactNode;\n}\n\nexport const CartProvider: React.FunctionComponent<DropDownMenuInterface> = ({ children }) => {\n  const [cart = [], setCart] = useLocalStorage('cart', []);\n  const [balloons, setBalloons] = useState<BalloonWithQuantity[]>([]);\n\n  const add = useCallback(\n    (balloon: Balloon) => {\n      !isInCart(balloon.id)\n        ? setBalloons(v => [{ balloon, count: 1 }, ...v])\n        : addQuantity(balloon.id);\n    },\n    [balloons],\n  );\n\n  const isInCart = useCallback(\n    (id: string) => {\n      return !!balloons.find(\n        (balloonWithQuantity: BalloonWithQuantity) => balloonWithQuantity.balloon.id === id,\n      );\n    },\n    [balloons],\n  );\n\n  const toggle = useCallback(\n    (balloon: Balloon) => {\n      isInCart(balloon.id) ? remove(balloon.id) : add(balloon);\n    },\n    [balloons],\n  );\n\n  const remove = useCallback(\n    (id: string) => {\n      setBalloons(v => v.filter(balloonWithQuantity => balloonWithQuantity.balloon.id !== id));\n    },\n    [balloons],\n  );\n\n  const addQuantity = useCallback(\n    (id: string) => {\n      setBalloons(updateQuantity(balloons, id, 1));\n    },\n    [balloons],\n  );\n\n  const subtractQuantity = useCallback(\n    (id: string) => {\n      setBalloons(\n        updateQuantity(balloons, id, -1).filter(\n          (balloonWithQuantity: BalloonWithQuantity) => balloonWithQuantity.count > 0,\n        ),\n      );\n    },\n    [balloons],\n  );\n\n  // Load initial local storage values\n  useEffect(() => {\n    setBalloons(cart);\n  }, []);\n\n  // Update local storage on every balloons change\n  useEffect(() => {\n    setCart(balloons as []);\n  }, [balloons]);\n\n  return (\n    <CartContext.Provider\n      value={{ add, remove, balloons, isInCart, toggle, subtractQuantity, addQuantity }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}