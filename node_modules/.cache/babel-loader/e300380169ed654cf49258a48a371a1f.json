{"ast":null,"code":"var _jsxFileName = \"/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/components/molecules/DropDownMenu/DropDownMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DropDownMenuContext = /*#__PURE__*/React.createContext({\n  opened: false,\n  toggle: () => null,\n  onChange: _ => null,\n  selected: {\n    key: '',\n    value: ''\n  },\n  options: []\n});\n\nconst DropDownMenu = ({\n  children,\n  options,\n  onDropDownChange,\n  defaultValue\n}) => {\n  _s();\n\n  const [opened, setOpened] = useState(false);\n  const initial = useMemo(() => ({\n    key: 'default',\n    value: defaultValue\n  }), [defaultValue]);\n  const [selected, setSelected] = useState(initial || options[0]);\n  const toggle = useCallback(() => {\n    setOpened(v => !v);\n  }, []);\n  const onChange = useCallback(val => {\n    if (selected.key === val.key) setSelected(initial);else setSelected(val);\n    onDropDownChange(val);\n    toggle();\n  }, [initial, onDropDownChange, selected, toggle]);\n  return /*#__PURE__*/_jsxDEV(DropDownMenuContext.Provider, {\n    value: {\n      opened,\n      toggle,\n      selected,\n      onChange,\n      options\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      style: {\n        position: 'relative'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDownMenu, \"YoaxR8Nc7SFb7uRX+43D5LsC84w=\");\n\n_c = DropDownMenu;\nexport default DropDownMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDownMenu\");","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/components/molecules/DropDownMenu/DropDownMenu.tsx"],"names":["React","useState","useCallback","useMemo","DropDownMenuContext","createContext","opened","toggle","onChange","_","selected","key","value","options","DropDownMenu","children","onDropDownChange","defaultValue","setOpened","initial","setSelected","v","val","position"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAkDC,OAAlD,QAAiE,OAAjE;;AASA,OAAO,MAAMC,mBAAmB,gBAAGJ,KAAK,CAACK,aAAN,CAAkC;AACnEC,EAAAA,MAAM,EAAE,KAD2D;AAEnEC,EAAAA,MAAM,EAAE,MAAM,IAFqD;AAGnEC,EAAAA,QAAQ,EAAGC,CAAD,IAAwB,IAHiC;AAInEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAJyD;AAKnEC,EAAAA,OAAO,EAAE;AAL0D,CAAlC,CAA5B;;AAgBP,MAAMC,YAA4D,GAAG,CAAC;AACpEC,EAAAA,QADoE;AAEpEF,EAAAA,OAFoE;AAGpEG,EAAAA,gBAHoE;AAIpEC,EAAAA;AAJoE,CAAD,KAK/D;AAAA;;AACJ,QAAM,CAACX,MAAD,EAASY,SAAT,IAAsBjB,QAAQ,CAAU,KAAV,CAApC;AACA,QAAMkB,OAAO,GAAGhB,OAAO,CAAC,OAAO;AAAEQ,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAEK;AAAzB,GAAP,CAAD,EAAkD,CAACA,YAAD,CAAlD,CAAvB;AACA,QAAM,CAACP,QAAD,EAAWU,WAAX,IAA0BnB,QAAQ,CAAkBkB,OAAO,IAAIN,OAAO,CAAC,CAAD,CAApC,CAAxC;AAEA,QAAMN,MAAM,GAAGL,WAAW,CAAC,MAAM;AAC/BgB,IAAAA,SAAS,CAACG,CAAC,IAAI,CAACA,CAAP,CAAT;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,QAAMb,QAAQ,GAAGN,WAAW,CAC1BoB,GAAG,IAAI;AACL,QAAIZ,QAAQ,CAACC,GAAT,KAAiBW,GAAG,CAACX,GAAzB,EAA8BS,WAAW,CAACD,OAAD,CAAX,CAA9B,KACKC,WAAW,CAACE,GAAD,CAAX;AACLN,IAAAA,gBAAgB,CAACM,GAAD,CAAhB;AACAf,IAAAA,MAAM;AACP,GANyB,EAO1B,CAACY,OAAD,EAAUH,gBAAV,EAA4BN,QAA5B,EAAsCH,MAAtC,CAP0B,CAA5B;AAUA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAF;AAAUC,MAAAA,MAAV;AAAkBG,MAAAA,QAAlB;AAA4BF,MAAAA,QAA5B;AAAsCK,MAAAA;AAAtC,KAArC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAAEU,QAAAA,QAAQ,EAAE;AAAZ,OAA7B;AAAA,gBACGR;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAMD,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useCallback, ReactNode, useMemo } from 'react';\n\ntype ContextProps = {\n  opened: boolean;\n  toggle: () => void;\n  onChange: (val: KeyValInterface) => void;\n  selected: KeyValInterface;\n  options: KeyValInterface[];\n};\nexport const DropDownMenuContext = React.createContext<ContextProps>({\n  opened: false,\n  toggle: () => null,\n  onChange: (_: KeyValInterface) => null,\n  selected: { key: '', value: '' },\n  options: [],\n});\n\ninterface DropDownMenuInterface {\n  children: ReactNode;\n  options: KeyValInterface[];\n  onDropDownChange: (val: KeyValInterface) => void;\n  className?: string;\n  defaultValue: string;\n}\n\nconst DropDownMenu: React.FunctionComponent<DropDownMenuInterface> = ({\n  children,\n  options,\n  onDropDownChange,\n  defaultValue,\n}) => {\n  const [opened, setOpened] = useState<boolean>(false);\n  const initial = useMemo(() => ({ key: 'default', value: defaultValue }), [defaultValue]);\n  const [selected, setSelected] = useState<KeyValInterface>(initial || options[0]);\n\n  const toggle = useCallback(() => {\n    setOpened(v => !v);\n  }, []);\n\n  const onChange = useCallback(\n    val => {\n      if (selected.key === val.key) setSelected(initial);\n      else setSelected(val);\n      onDropDownChange(val);\n      toggle();\n    },\n    [initial, onDropDownChange, selected, toggle],\n  );\n\n  return (\n    <DropDownMenuContext.Provider value={{ opened, toggle, selected, onChange, options }}>\n      <div className='menu' style={{ position: 'relative' }}>\n        {children}\n      </div>\n    </DropDownMenuContext.Provider>\n  );\n};\n\nexport default DropDownMenu;\n"]},"metadata":{},"sourceType":"module"}