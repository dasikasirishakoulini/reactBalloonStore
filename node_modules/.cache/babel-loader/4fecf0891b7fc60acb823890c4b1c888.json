{"ast":null,"code":"import{createClient,dedupExchange,fetchExchange}from'urql';import{retryExchange}from'@urql/exchange-retry';import{cacheExchange}from'@urql/exchange-graphcache';import getEnv from'@utils/getEnv';import{relayPagination}from'@urql/exchange-graphcache/extras';var cache=cacheExchange({resolvers:{Query:{balloons:relayPagination()}}});var options={initialDelayMs:1000,maxDelayMs:15000,randomDelay:true,maxNumberAttempts:2,retryIf:function retryIf(err){return err&&err.message;}};var url=getEnv('REACT_APP_GRAPHQL_ENDPOINT','https://balloons.thetc.se/graphql');var client=createClient({url:url,exchanges:[dedupExchange,retryExchange(options),cache,fetchExchange]});export default client;","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/graphql/client.ts"],"names":["createClient","dedupExchange","fetchExchange","retryExchange","cacheExchange","getEnv","relayPagination","cache","resolvers","Query","balloons","options","initialDelayMs","maxDelayMs","randomDelay","maxNumberAttempts","retryIf","err","message","url","client","exchanges"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,aAAvB,CAAsCC,aAAtC,KAA2D,MAA3D,CACA,OAASC,aAAT,KAA8B,sBAA9B,CACA,OAASC,aAAT,KAA8B,2BAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,OAASC,eAAT,KAAgC,kCAAhC,CAEA,GAAMC,CAAAA,KAAK,CAAGH,aAAa,CAAC,CAC1BI,SAAS,CAAE,CACTC,KAAK,CAAE,CACLC,QAAQ,CAAEJ,eAAe,EADpB,CADE,CADe,CAAD,CAA3B,CAQA,GAAMK,CAAAA,OAAO,CAAG,CACdC,cAAc,CAAE,IADF,CAEdC,UAAU,CAAE,KAFE,CAGdC,WAAW,CAAE,IAHC,CAIdC,iBAAiB,CAAE,CAJL,CAKdC,OAAO,CAAE,iBAACC,GAAD,QAAcA,CAAAA,GAAG,EAAIA,GAAG,CAACC,OAAzB,EALK,CAAhB,CAQA,GAAMC,CAAAA,GAAG,CAAGd,MAAM,CAAC,4BAAD,CAA+B,mCAA/B,CAAlB,CAEA,GAAMe,CAAAA,MAAM,CAAGpB,YAAY,CAAC,CAC1BmB,GAAG,CAAHA,GAD0B,CAE1BE,SAAS,CAAE,CAACpB,aAAD,CAAgBE,aAAa,CAACQ,OAAD,CAA7B,CAAwCJ,KAAxC,CAA+CL,aAA/C,CAFe,CAAD,CAA3B,CAKA,cAAekB,CAAAA,MAAf","sourcesContent":["import { createClient, dedupExchange, fetchExchange } from 'urql';\nimport { retryExchange } from '@urql/exchange-retry';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport getEnv from '@utils/getEnv';\nimport { relayPagination } from '@urql/exchange-graphcache/extras';\n\nconst cache = cacheExchange({\n  resolvers: {\n    Query: {\n      balloons: relayPagination(),\n    },\n  },\n});\n\nconst options = {\n  initialDelayMs: 1000,\n  maxDelayMs: 15000,\n  randomDelay: true,\n  maxNumberAttempts: 2,\n  retryIf: (err: any) => err && err.message,\n};\n\nconst url = getEnv('REACT_APP_GRAPHQL_ENDPOINT', 'https://balloons.thetc.se/graphql');\n\nconst client = createClient({\n  url,\n  exchanges: [dedupExchange, retryExchange(options), cache, fetchExchange],\n});\n\nexport default client;\n"]},"metadata":{},"sourceType":"module"}