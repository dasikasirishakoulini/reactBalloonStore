{"ast":null,"code":"var _jsxFileName = \"/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/components/molecules/DropDownMenu/MenuTitle/MenuTitle.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport { DropDownMenuContext } from '../DropDownMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuTitle = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    toggle,\n    selected,\n    opened\n  } = useContext(DropDownMenuContext);\n  return isFunction(children) ? children({\n    selected,\n    toggle,\n    opened\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => toggle(),\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MenuTitle, \"zjhvrE0A3KhOZrScJSs6p4NvBa4=\");\n\n_c = MenuTitle;\nexport default MenuTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuTitle\");","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/components/molecules/DropDownMenu/MenuTitle/MenuTitle.tsx"],"names":["React","useContext","isFunction","DropDownMenuContext","MenuTitle","children","rest","toggle","selected","opened"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,mBAAT,QAAoC,iBAApC;;;AAYA,MAAMC,SAAsD,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AACxF,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAA+BR,UAAU,CAACE,mBAAD,CAA/C;AAEA,SAAOD,UAAU,CAACG,QAAD,CAAV,GACLA,QAAQ,CAAC;AAAEG,IAAAA,QAAF;AAAYD,IAAAA,MAAZ;AAAoBE,IAAAA;AAApB,GAAD,CADH,gBAGL;AAAK,IAAA,OAAO,EAAE,MAAMF,MAAM,EAA1B;AAAA,OAAkCD,IAAlC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AAOD,CAVD;;GAAMD,S;;KAAAA,S;AAYN,eAAeA,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport { DropDownMenuContext } from '../DropDownMenu';\n\ninterface MenuTitleInterface {\n  children: React.ReactElement | ((props: Props) => React.ReactElement);\n}\n\ninterface Props {\n  selected: KeyValInterface;\n  toggle: () => void;\n  opened: boolean;\n}\n\nconst MenuTitle: React.FunctionComponent<MenuTitleInterface> = ({ children, ...rest }) => {\n  const { toggle, selected, opened } = useContext(DropDownMenuContext);\n\n  return isFunction(children) ? (\n    children({ selected, toggle, opened })\n  ) : (\n    <div onClick={() => toggle()} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default MenuTitle;\n"]},"metadata":{},"sourceType":"module"}