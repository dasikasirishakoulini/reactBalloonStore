{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */import React,{useCallback,useContext}from'react';import withStyle from'./withStyle';import{DropDownMenu,MenuContent,MenuTitle}from'@components/molecules/DropDownMenu';import{Icon}from'@components/icons';import{Context}from'../FiltersContext/FiltersContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FilterSelector=function FilterSelector(_ref){var className=_ref.className,options=_ref.options,type=_ref.type,title=_ref.title;var _useContext=useContext(Context),setFilter=_useContext.setFilter,filters=_useContext.filters;var changeFilter=useCallback(function(val){filters[type]===val?setFilter(type)(''):setFilter(type)(val);},[filters]);return/*#__PURE__*/_jsx(\"div\",{className:className,children:/*#__PURE__*/_jsxs(DropDownMenu,{options:options,onDropDownChange:function onDropDownChange(val){return changeFilter(val.key);},defaultValue:title,children:[/*#__PURE__*/_jsx(MenuTitle,{children:function children(_ref2){var selected=_ref2.selected,toggle=_ref2.toggle,opened=_ref2.opened;return/*#__PURE__*/_jsxs(\"button\",{className:\"dropdown-menu-title \".concat(opened?'--opened':''),onClick:toggle,children:[selected.value,/*#__PURE__*/_jsx(Icon,{name:\"Arrow\"})]});}}),/*#__PURE__*/_jsx(MenuContent,{})]})});};export default withStyle(FilterSelector);","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/pages/Dashboard/components/FilterSelector/FilterSelector.tsx"],"names":["React","useCallback","useContext","withStyle","DropDownMenu","MenuContent","MenuTitle","Icon","Context","FilterSelector","className","options","type","title","setFilter","filters","changeFilter","val","key","selected","toggle","opened","value"],"mappings":"AAAA,gDACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,KAA+C,OAA/C,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,YAAT,CAAuBC,WAAvB,CAAoCC,SAApC,KAAqD,oCAArD,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAASC,OAAT,KAAwB,kCAAxB,C,wFASA,GAAMC,CAAAA,cAA8C,CAAG,QAAjDA,CAAAA,cAAiD,MAAyC,IAAtCC,CAAAA,SAAsC,MAAtCA,SAAsC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,IAAkB,MAAlBA,IAAkB,CAAZC,KAAY,MAAZA,KAAY,iBAC/DX,UAAU,CAACM,OAAD,CADqD,CACtFM,SADsF,aACtFA,SADsF,CAC3EC,OAD2E,aAC3EA,OAD2E,CAG9F,GAAMC,CAAAA,YAAY,CAAGf,WAAW,CAC9B,SAAAgB,GAAG,CAAI,CACLF,OAAO,CAACH,IAAD,CAAP,GAAkBK,GAAlB,CAAwBH,SAAS,CAACF,IAAD,CAAT,CAAgB,EAAhB,CAAxB,CAA8CE,SAAS,CAACF,IAAD,CAAT,CAAgBK,GAAhB,CAA9C,CACD,CAH6B,CAI9B,CAACF,OAAD,CAJ8B,CAAhC,CAMA,mBACE,YAAK,SAAS,CAAEL,SAAhB,uBACE,MAAC,YAAD,EACE,OAAO,CAAEC,OADX,CAEE,gBAAgB,CAAE,0BAAAM,GAAG,QAAID,CAAAA,YAAY,CAACC,GAAG,CAACC,GAAL,CAAhB,EAFvB,CAGE,YAAY,CAAEL,KAHhB,wBAKE,KAAC,SAAD,WACG,4BAAGM,CAAAA,QAAH,OAAGA,QAAH,CAAaC,MAAb,OAAaA,MAAb,CAAqBC,MAArB,OAAqBA,MAArB,oBACC,gBAAQ,SAAS,+BAAyBA,MAAM,CAAG,UAAH,CAAgB,EAA/C,CAAjB,CAAsE,OAAO,CAAED,MAA/E,WACGD,QAAQ,CAACG,KADZ,cAEE,KAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EAFF,GADD,EADH,EALF,cAaE,KAAC,WAAD,IAbF,GADF,EADF,CAmBD,CA5BD,CA8BA,cAAenB,CAAAA,SAAS,CAACM,cAAD,CAAxB","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext } from 'react';\nimport withStyle from './withStyle';\nimport { DropDownMenu, MenuContent, MenuTitle } from '@components/molecules/DropDownMenu';\nimport { Icon } from '@components/icons';\nimport { Context } from '../FiltersContext/FiltersContext';\n\ninterface Props {\n  className?: string;\n  type: string;\n  options: KeyValInterface[];\n  title: string;\n}\n\nconst FilterSelector: React.FunctionComponent<Props> = ({ className, options, type, title }) => {\n  const { setFilter, filters } = useContext(Context);\n\n  const changeFilter = useCallback(\n    val => {\n      filters[type] === val ? setFilter(type)('') : setFilter(type)(val);\n    },\n    [filters],\n  );\n  return (\n    <div className={className}>\n      <DropDownMenu\n        options={options}\n        onDropDownChange={val => changeFilter(val.key)}\n        defaultValue={title}\n      >\n        <MenuTitle>\n          {({ selected, toggle, opened }) => (\n            <button className={`dropdown-menu-title ${opened ? '--opened' : ''}`} onClick={toggle}>\n              {selected.value}\n              <Icon name='Arrow' />\n            </button>\n          )}\n        </MenuTitle>\n        <MenuContent />\n      </DropDownMenu>\n    </div>\n  );\n};\n\nexport default withStyle(FilterSelector);\n"]},"metadata":{},"sourceType":"module"}