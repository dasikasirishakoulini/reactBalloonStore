{"ast":null,"code":"var _jsxFileName = \"/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/pages/Dashboard/components/FiltersDrawer/FiltersDrawer.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext } from 'react';\nimport withStyle from './withStyle';\nimport { Context } from '@pages/Dashboard/components/FiltersContext/FiltersContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FiltersDrawer = ({\n  className,\n  options,\n  title,\n  type\n}) => {\n  _s();\n\n  const {\n    setFilter,\n    filters\n  } = useContext(Context);\n  const changeFilter = useCallback(val => {\n    filters[type] === val ? setFilter(type)('') : setFilter(type)(val);\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"container\",\n      children: options.map(({\n        key,\n        value\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => changeFilter(key),\n        className: `filter-item ${filters[type] === key && 'selected'}`,\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FiltersDrawer, \"4CdHXjwPm3rMhL8H+KvK3w+ahrQ=\");\n\n_c = FiltersDrawer;\nexport default _c2 = withStyle(FiltersDrawer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FiltersDrawer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/pages/Dashboard/components/FiltersDrawer/FiltersDrawer.tsx"],"names":["React","useCallback","useContext","withStyle","Context","FiltersDrawer","className","options","title","type","setFilter","filters","changeFilter","val","map","key","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,2DAAxB;;;AASA,MAAMC,aAA6C,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAD,KAAyC;AAAA;;AAC7F,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBT,UAAU,CAACE,OAAD,CAAzC;AAEA,QAAMQ,YAAY,GAAGX,WAAW,CAC9BY,GAAG,IAAI;AACLF,IAAAA,OAAO,CAACF,IAAD,CAAP,KAAkBI,GAAlB,GAAwBH,SAAS,CAACD,IAAD,CAAT,CAAgB,EAAhB,CAAxB,GAA8CC,SAAS,CAACD,IAAD,CAAT,CAAgBI,GAAhB,CAA9C;AACD,GAH6B,EAI9B,CAACF,OAAD,CAJ8B,CAAhC;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEL,SAAhB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACGD,OAAO,CAACO,GAAR,CAAY,CAAC;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAD,kBACX;AAEE,QAAA,OAAO,EAAE,MAAMJ,YAAY,CAACG,GAAD,CAF7B;AAGE,QAAA,SAAS,EAAG,eAAcJ,OAAO,CAACF,IAAD,CAAP,KAAkBM,GAAlB,IAAyB,UAAW,EAHhE;AAAA,+BAKE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA;AALF,SACOD,GADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1BD;;GAAMV,a;;KAAAA,a;AA4BN,qBAAeF,SAAS,CAACE,aAAD,CAAxB","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext } from 'react';\nimport withStyle from './withStyle';\nimport { Context } from '@pages/Dashboard/components/FiltersContext/FiltersContext';\n\ninterface Props {\n  className?: string;\n  type: string;\n  title: string;\n  options: KeyValInterface[];\n}\n\nconst FiltersDrawer: React.FunctionComponent<Props> = ({ className, options, title, type }) => {\n  const { setFilter, filters } = useContext(Context);\n\n  const changeFilter = useCallback(\n    val => {\n      filters[type] === val ? setFilter(type)('') : setFilter(type)(val);\n    },\n    [filters],\n  );\n\n  return (\n    <div className={className}>\n      <h4 className='title'>{title}</h4>\n      <ul className='container'>\n        {options.map(({ key, value }) => (\n          <li\n            key={key}\n            onClick={() => changeFilter(key)}\n            className={`filter-item ${filters[type] === key && 'selected'}`}\n          >\n            <h6>{value}</h6>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default withStyle(FiltersDrawer);\n"]},"metadata":{},"sourceType":"module"}