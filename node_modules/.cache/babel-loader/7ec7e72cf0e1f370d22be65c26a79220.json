{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useRef, useState } from 'react';\n\nconst usePagination = () => {\n  _s();\n\n  const startCursor = useRef(undefined);\n  const endCursor = useRef(undefined);\n  const [paginationVars, setPaginationVars] = useState({});\n  const reset = useCallback(() => {\n    setPaginationVars({});\n  }, []);\n  const onResponse = useCallback(pageInfo => {\n    startCursor.current = pageInfo.startCursor;\n    endCursor.current = pageInfo.endCursor;\n  }, []);\n  const nextPage = useCallback(() => setPaginationVars({\n    after: endCursor.current\n  }), []);\n  const previousPage = useCallback(() => setPaginationVars({\n    before: startCursor.current\n  }), []);\n  return {\n    paginationVars,\n    onResponse,\n    nextPage,\n    previousPage,\n    reset\n  };\n};\n\n_s(usePagination, \"wdfSGu8UpBcHkNORG4fSJO+/s5Y=\");\n\nexport default usePagination;","map":{"version":3,"sources":["/Users/sirishadasika/Desktop/balloon/Balloons-Store/src/pages/Dashboard/components/BalloonsList/usePagination.ts"],"names":["useCallback","useRef","useState","usePagination","startCursor","undefined","endCursor","paginationVars","setPaginationVars","reset","onResponse","pageInfo","current","nextPage","after","previousPage","before"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,OAA9C;;AAUA,MAAMC,aAAa,GAAG,MAAkB;AAAA;;AACtC,QAAMC,WAAW,GAAGH,MAAM,CAACI,SAAD,CAA1B;AACA,QAAMC,SAAS,GAAGL,MAAM,CAACI,SAAD,CAAxB;AACA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAS,EAAT,CAApD;AAEA,QAAMO,KAAK,GAAGT,WAAW,CAAC,MAAM;AAC9BQ,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAFwB,EAEtB,EAFsB,CAAzB;AAIA,QAAME,UAAU,GAAGV,WAAW,CAACW,QAAQ,IAAI;AACzCP,IAAAA,WAAW,CAACQ,OAAZ,GAAsBD,QAAQ,CAACP,WAA/B;AACAE,IAAAA,SAAS,CAACM,OAAV,GAAoBD,QAAQ,CAACL,SAA7B;AACD,GAH6B,EAG3B,EAH2B,CAA9B;AAKA,QAAMO,QAAQ,GAAGb,WAAW,CAAC,MAAMQ,iBAAiB,CAAC;AAAEM,IAAAA,KAAK,EAAER,SAAS,CAACM;AAAnB,GAAD,CAAxB,EAAwD,EAAxD,CAA5B;AACA,QAAMG,YAAY,GAAGf,WAAW,CAAC,MAAMQ,iBAAiB,CAAC;AAAEQ,IAAAA,MAAM,EAAEZ,WAAW,CAACQ;AAAtB,GAAD,CAAxB,EAA2D,EAA3D,CAAhC;AACA,SAAO;AAAEL,IAAAA,cAAF;AAAkBG,IAAAA,UAAlB;AAA8BG,IAAAA,QAA9B;AAAwCE,IAAAA,YAAxC;AAAsDN,IAAAA;AAAtD,GAAP;AACD,CAjBD;;GAAMN,a;;AAmBN,eAAeA,aAAf","sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\ninterface Pagination {\n  paginationVars: Object;\n  onResponse: (pageInfo: PageInfo) => void;\n  nextPage: () => void;\n  previousPage: () => void;\n  reset: () => void;\n}\n\nconst usePagination = (): Pagination => {\n  const startCursor = useRef(undefined);\n  const endCursor = useRef(undefined);\n  const [paginationVars, setPaginationVars] = useState<Object>({});\n\n  const reset = useCallback(() => {\n    setPaginationVars({});\n  }, []);\n\n  const onResponse = useCallback(pageInfo => {\n    startCursor.current = pageInfo.startCursor;\n    endCursor.current = pageInfo.endCursor;\n  }, []);\n\n  const nextPage = useCallback(() => setPaginationVars({ after: endCursor.current }), []);\n  const previousPage = useCallback(() => setPaginationVars({ before: startCursor.current }), []);\n  return { paginationVars, onResponse, nextPage, previousPage, reset };\n};\n\nexport default usePagination;\n"]},"metadata":{},"sourceType":"module"}